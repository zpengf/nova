/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.generated.tables.Demo1;
import org.jooq.generated.tables.records.Demo1Record;
import org.jooq.impl.DAOImpl;


/**
 * ces 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Demo1Dao extends DAOImpl<Demo1Record, org.jooq.generated.tables.pojos.Demo1, Integer> {

    /**
     * Create a new Demo1Dao without any configuration
     */
    public Demo1Dao() {
        super(Demo1.DEMO1, org.jooq.generated.tables.pojos.Demo1.class);
    }

    /**
     * Create a new Demo1Dao with an attached configuration
     */
    public Demo1Dao(Configuration configuration) {
        super(Demo1.DEMO1, org.jooq.generated.tables.pojos.Demo1.class, configuration);
    }

    @Override
    public Integer getId(org.jooq.generated.tables.pojos.Demo1 object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Demo1> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Demo1.DEMO1.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Demo1> fetchById(Integer... values) {
        return fetch(Demo1.DEMO1.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.generated.tables.pojos.Demo1 fetchOneById(Integer value) {
        return fetchOne(Demo1.DEMO1.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Demo1> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Demo1.DEMO1.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Demo1> fetchByName(String... values) {
        return fetch(Demo1.DEMO1.NAME, values);
    }
}
